version: "3.8"

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx1
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx:/tmp
    entrypoint: /tmp/entrypoint.sh
    environment:
      - BACKEND=app
      - NGINX_SERVERNAME=NGINX1
    labels:
      - traefik.http.routers.nginx.rule=Host(`nginx1.docker.localhost`)
      - traefik.http.services.nginx.loadbalancer.server.port=80
      - traefik.http.routers.nginx.service=nginx
      - traefik.enable=true
    networks:
      - project

  nginx2:
    image: nginx:stable-alpine
    container_name: nginx2
    restart: unless-stopped
    ports:
      - "8001:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx:/tmp
    entrypoint: /tmp/entrypoint.sh
    environment:
      - BACKEND=app2
      - NGINX_SERVERNAME=NGINX2
    labels:
      - traefik.http.routers.nginx2.rule=Host(`nginx2.docker.localhost`)
      - traefik.http.services.nginx2.loadbalancer.server.port=80
      - traefik.http.routers.nginx2.service=nginx2
      - traefik.enable=true
    networks:
      - project

  composer:
    build:
      context: .
      dockerfile: ./dockerfiles/composer.dockerfile
    container_name: composer
    volumes:
      - ./src:/var/www/html
    entrypoint: composer-entrypoint/entrypoint.sh
    networks:
      - project

  npm:
    build:
      context: .
      dockerfile: ./dockerfiles/npm.dockerfile
    container_name: npm
    volumes:
      - ./src:/var/www/html
    entrypoint: npm/entrypoint.sh
    networks:
      - project

  db:
    image: mysql:8.0
    restart: unless-stopped
    container_name: mysql
    ports:
      - 3306:3306
    volumes:
      - ./mysql/data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: minh
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    networks:
      - project

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - "3400:80"
    depends_on:
      - db
    networks:
      - project

  app:
    build:
      context: .
      dockerfile: ./dockerfiles/php.dockerfile
    container_name: php1
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
    networks:
      - project

  app2:
    build:
      context: .
      dockerfile: ./dockerfiles/php.dockerfile
    container_name: php2
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
    networks:
      - project

  reverse-proxy:
    image: traefik:v2.4
    container_name: traefik
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=false
    networks:
      - project

networks:
  project:
    driver: bridge
